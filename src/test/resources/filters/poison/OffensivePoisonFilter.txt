log.debug("OffensivePoisonFilter");

import java.util.*;
import com.ssm.llp.core.model.*;

            String[] permuteWords = util.permuteWords(name);
            offensiveNames = nameDao.find(SsmNameType.OFFENSIVE);
            for (String permuteWord : permuteWords) {
                for (SsmName offensiveName : offensiveNames) {
                    boolean matches = permuteWord.toUpperCase().replaceAll("[()]", "")
                            .matches(".*\\b" + offensiveName.getName().toUpperCase().replaceAll("[()]", "") + "\\b.*");
                    if (matches) {
                        log.debug("Found Invalid! " + offensiveName.getName());
                        log.debug("Name = " + permuteWord);
                        return true;
                    }
                }
            }
            return false;
            
boolean result = false;

// check as a whole
result =  nameDao.hasName(name, 0);
if(result) return result;

// check word for word
String[] words = name.split(" ");
for(int i=0; i < words.length; i++){
    log.debug("words: " + words[i]);
    if(nameDao.hasName(words[i], 0)) return true;
}

// check permutations
String[] pairs = util.permutatePairs(name);
for(int i=0; i < pairs.length; i++){
    log.debug("pairs: " + pairs[i]);
    if(nameDao.hasName(pairs[i], 0)) return true;
}

return false;

